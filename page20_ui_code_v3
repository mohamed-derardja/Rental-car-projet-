import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.draw.clip
import com.example.myapplication.R
import androidx.compose.foundation.Image


@Composable
fun PaymentMethod() {
    var selectedOption by remember { mutableStateOf("Cash") }

    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(Color(0xFFF2F5FA))
    ) {
        Column(modifier = Modifier.fillMaxSize()) {
            StatusBar()
            MainContent(selectedOption) { selectedOption = it }
            BottomBar()
        }
    }
}

@Composable
private fun StatusBar() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .padding(top = 21.dp),
        horizontalArrangement = Arrangement.SpaceBetween,
        verticalAlignment = Alignment.CenterVertically
    ) {
        Text(
            text = "9:41",
            modifier = Modifier
                .padding(start = 10.dp),
            fontSize = 17.sp,
            fontWeight = FontWeight.SemiBold,
            textAlign = TextAlign.Center,
            color = Color.Black
        )

        Row(
            modifier = Modifier.padding(end = 10.dp),
            horizontalArrangement = Arrangement.End,
            verticalAlignment = Alignment.CenterVertically
        ) {
            Image(
                painter = painterResource(id = R.drawable.wifi),
                contentDescription = "Signal",
                modifier = Modifier.size(20.dp),
                contentScale = ContentScale.Fit
            )
            Spacer(modifier = Modifier.width(7.dp))
            Image(
                painter = painterResource(id = R.drawable.battery),
                contentDescription = "Battery",
                modifier = Modifier.size(17.dp),
                contentScale = ContentScale.Fit
            )
        }
    }
}

@Composable
private fun MainContent(
    selectedOption: String,
    onOptionSelected: (String) -> Unit
) {
    Column(
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 14.dp)
    ) {
        Row(
            modifier = Modifier.padding(top = 19.dp),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Box(
                modifier = Modifier
                    .size(40.dp)
                    .background(Color.White, RoundedCornerShape(20.dp))
                    .border(2.dp, Color.White, RoundedCornerShape(20.dp)),
                contentAlignment = Alignment.Center
            ) {
                Image(
                    painter = painterResource(id = R.drawable.credit_card_icon),
                    contentDescription = "Payment Icon",
                    modifier = Modifier.size(20.dp)
                )
            }

            Spacer(modifier = Modifier.width(42.dp))

            Text(
                text = "Payment method",
                fontSize = 19.sp,
                fontWeight = FontWeight.Medium,
                letterSpacing = 0.1.sp
            )
        }

        Text(
            text = "Cash",
            modifier = Modifier.padding(top = 31.dp),
            fontSize = 15.sp,
            fontWeight = FontWeight.Medium
        )

        CashOption(selectedOption == "Cash") {
            onOptionSelected("Cash")
        }

        Text(
            text = "Card Edahabia",
            modifier = Modifier.padding(top = 26.dp),
            fontSize = 16.sp,
            fontWeight = FontWeight.Medium
        )

        CardOption(selectedOption == "Card") {
            onOptionSelected("Card")
        }

        Spacer(modifier = Modifier.weight(1f))

        Button(
            onClick = { /* Handle continue */ },
            modifier = Modifier
                .fillMaxWidth()
                .height(50.dp)
                .padding(vertical = 20.dp),
            shape = RoundedCornerShape(30.dp),
            colors = ButtonDefaults.buttonColors(containerColor = Color(0xFF149459))
        ) {
            Text(
                text = "Continue",
                color = Color.White,
                fontSize = 17.sp,
                fontWeight = FontWeight.SemiBold
            )
        }
    }
}

@Composable
private fun CashOption(isSelected: Boolean, onSelect: () -> Unit) {
    Box(
        modifier = Modifier
            .fillMaxWidth()
            .padding(top = 9.dp)
            .border(2.dp, Color.Black, RoundedCornerShape(10.dp))
            .background(Color.White)
            .clickable { onSelect() }
            .padding(horizontal = 12.dp, vertical = 8.dp)
    ) {
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            Row(verticalAlignment = Alignment.CenterVertically) {
                Text("DA", fontSize = 15.sp, fontWeight = FontWeight.Medium)
                Divider(
                    modifier = Modifier
                        .padding(horizontal = 12.dp)
                        .width(1.dp)
                        .height(35.dp),
                    color = Color.Black
                )
                Text("cash", fontSize = 15.sp, fontWeight = FontWeight.Medium)
            }

            if (isSelected) {
                Image(
                    painter = painterResource(id = R.drawable.time),
                    contentDescription = "Selected",
                    modifier = Modifier.size(24.dp)
                )
            }
        }
    }
}

@Composable
private fun CardOption(isSelected: Boolean, onSelect: () -> Unit) {
    Box(
        modifier = Modifier
            .fillMaxWidth()
            .padding(top = 9.dp)
            .border(2.dp, Color.Black, RoundedCornerShape(10.dp))
            .background(Color.White)
            .clickable { onSelect() }
            .padding(horizontal = 12.dp, vertical = 8.dp)
    ) {
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            Row(verticalAlignment = Alignment.CenterVertically) {
                Image(
                    painter = painterResource(id = R.drawable.credit_card_icon),
                    contentDescription = "Card",
                    modifier = Modifier.size(28.dp)
                )
                Spacer(modifier = Modifier.width(13.dp))
                Text("Add Card", fontSize = 15.sp, fontWeight = FontWeight.Normal)
            }

            if (isSelected) {
                Image(
                    painter = painterResource(id = R.drawable.battery),
                    contentDescription = "Selected",
                    modifier = Modifier.size(24.dp)
                )
            } else {
                Image(
                    painter = painterResource(id = R.drawable.fleche_icon_lonly),
                    contentDescription = "Add",
                    modifier = Modifier.size(24.dp)
                )
            }
        }
    }
}

@Composable
private fun BottomBar() {
    Box(
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 106.dp, vertical = 8.dp),
        contentAlignment = Alignment.Center
    ) {
        Divider(
            modifier = Modifier
                .width(144.dp)
                .height(5.dp)
                .clip(RoundedCornerShape(100.dp)),
            color = Color.Black
        )
    }
}

@Preview(showBackground = true)
@Composable
fun PreviewPaymentMethod() {
    PaymentMethod()
}



