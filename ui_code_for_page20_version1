import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.Icon
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.RadioButton
import androidx.compose.material3.RadioButtonDefaults
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.myapplication.R

@Composable
fun PaymentMethodScreen() {
    val paymentOptions = listOf("Cash", "Card Edahabia")
    val (selectedOption, onOptionSelected) = remember { mutableStateOf(paymentOptions[0]) }

    Box(
        modifier = Modifier
            .fillMaxSize()
            .background(color = Color(0xFFF2F5FA))
    ) {
        Column(
            modifier = Modifier
                .fillMaxWidth()
                .padding(16.dp)
        ) {
            // Header
            Text(
                text = "Payment method",
                fontSize = 20.sp,
                fontWeight = FontWeight.Bold,
                modifier = Modifier.padding(bottom = 24.dp)
            )

            // Cash option
            PaymentOption(
                title = "Cash",
                subtitle = "DA cash",
                isSelected = selectedOption == "Cash",
                onSelect = { onOptionSelected("Cash") },
                iconRes = R.drawable.time
            )

            Spacer(modifier = Modifier.height(16.dp))

            // Card option
            PaymentOption(
                title = "Card Edahabia",
                subtitle = "Add Card",
                isSelected = selectedOption == "Card Edahabia",
                onSelect = { onOptionSelected("Card Edahabia") },
                iconRes = R.drawable.time
            )

            Spacer(modifier = Modifier.weight(1f))

            // Continue button
            Button(
                onClick = { /* Handle continue */ },
                modifier = Modifier
                    .fillMaxWidth()
                    .height(50.dp),
                shape = RoundedCornerShape(12.dp),
                colors = ButtonDefaults.buttonColors(
                    containerColor = Color(0xFF149459)
                )
            ) {
                Text("Continue", fontSize = 16.sp)
            }
        }
    }
}

@Composable
fun PaymentOption(
    title: String,
    subtitle: String,
    isSelected: Boolean,
    onSelect: () -> Unit,
    iconRes: Int
) {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .clickable(onClick = onSelect)
            .background(
                color = Color.White,
                shape = RoundedCornerShape(8.dp)
            )
            .border(
                width = 1.dp,
                color = Color.Black.copy(alpha = 0.2f),
                shape = RoundedCornerShape(8.dp)
            )
            .padding(16.dp),
        verticalAlignment = Alignment.CenterVertically,
        horizontalArrangement = Arrangement.SpaceBetween
    ) {
        Row(verticalAlignment = Alignment.CenterVertically) {
            Icon(
                painter = painterResource(id = iconRes),
                contentDescription = title,
                modifier = Modifier.size(24.dp)
            )
            Spacer(modifier = Modifier.width(16.dp))
            Column {
                Text(
                    text = title,
                    fontSize = 16.sp,
                    fontWeight = FontWeight.Medium
                )
                Text(
                    text = subtitle,
                    fontSize = 14.sp,
                    color = Color.Gray
                )
            }
        }

        RadioButton(
            selected = isSelected,
            onClick = null, // Selection handled by row click
            colors = RadioButtonDefaults.colors(
                selectedColor = Color(0xFF149459)
            )
        )
    }
}

@Preview(showBackground = true, device = "spec:width=360dp,height=800dp")
@Composable
fun PaymentMethodPreview() {
    MaterialTheme {
        PaymentMethodScreen()
    }
}
